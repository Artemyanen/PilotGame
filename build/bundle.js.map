{"version":3,"sources":["index.ts"],"names":[],"mappings":"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","file":"","sourcesContent":["import * as _ from 'underscore';\r\n\r\ninterface IObject {\r\n    x: number,\r\n    y: number,\r\n    color: string\r\n}\r\n\r\nclass Block implements IObject {\r\n    x: number;\r\n    y: number;\r\n    color: string;\r\n    height: number = 64;\r\n    width: number = 64;\r\n    neigh = [];\r\n    remove: boolean;\r\n\r\n    constructor(x, y, color) {\r\n        this.color = color;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.remove = false;\r\n    }\r\n\r\n    getNeightbours() {\r\n        const x = this.x;\r\n        const y = this.y;\r\n        return [\r\n            getObjectsIn(x, y - 64)[0],\r\n            getObjectsIn(x, y + 64)[0],\r\n            getObjectsIn(x - 64, y)[0],\r\n            getObjectsIn(x + 64, y)[0]].filter(q => q);\r\n    }\r\n    isDownPlaceEmpty() {\r\n        if (getObjectsIn(this.x, this.y + 64)[0] == undefined && this.y < canvas.height - this.height)\r\n            return true\r\n        return false;\r\n    }\r\n\r\n    update() {\r\n        if (this.isDownPlaceEmpty())\r\n            this.y += 16;\r\n    }\r\n\r\n}\r\n\r\nconst canvas = document.getElementById('MyCanvas');\r\nconst context = canvas.getContext('2d');\r\n\r\nlet dt: number;\r\nlet lastTime: number = 0;\r\nlet gameObjects: Block[] = [];\r\n\r\nconst pulse = (millis): void => {\r\n    if (lastTime != null && lastTime) {\r\n        dt = ((millis - lastTime) / 1000);\r\n        update();\r\n    }\r\n    lastTime = millis;\r\n    window.requestAnimationFrame(pulse);\r\n}\r\n\r\nconst update = () => {\r\n    gameObjects = gameObjects.filter(q => q.remove == false);\r\n\r\n    gameObjects.forEach(object => object.update());\r\n\r\n    context.clearRect(0, 0, canvas.width, canvas.height);\r\n    gameObjects.forEach((object, ind) => {\r\n        context.fillStyle = object.color;\r\n        context.fillRect(object.x, object.y, object.height, object.width);\r\n    });\r\n}\r\n\r\nconst getRandomColor = (): string => {\r\n    const colors = ['red', 'green', 'blue'];\r\n    let random = Math.floor(Math.random() * 3);\r\n    return colors[random];\r\n}\r\n\r\nconst createNewLine = () => {\r\n    const size = 64;\r\n    let y = canvas.height;\r\n    while (true) {\r\n        let lineObjects = new Array(4).fill(0).map((val, ind) => new Block(size * ind, y, getRandomColor()));\r\n        let result = _.chain(lineObjects).groupBy(q => q.color).map(q => q.length).filter(q => q > 2).value().length == 0;\r\n\r\n        if (result == false)\r\n            continue;\r\n\r\n        gameObjects = gameObjects.concat(lineObjects);\r\n        break;\r\n    }\r\n}\r\n\r\nconst upOldLines = () => {\r\n    gameObjects.forEach((block) => {\r\n        block.y -= 64;\r\n    });\r\n}\r\n\r\nconst bfs = (startBlock: Block) => {\r\n    let checked: Block[] = [];\r\n    let queue: Block[] = [];\r\n    let current: Block;\r\n    queue.push(startBlock);\r\n    checked.push(startBlock);\r\n    while (queue.length) {\r\n        current = queue.shift();\r\n        current\r\n            .getNeightbours()\r\n            .filter(neigh => neigh.color == current.color)\r\n            .forEach(neigh => {\r\n                if (checked.indexOf(neigh) == -1) {\r\n                    queue.push(neigh);\r\n                    checked.push(neigh);\r\n                }\r\n            });\r\n    }\r\n    return checked;\r\n};\r\n\r\nconst isTripleAvailable = (objects: Block[]) => {\r\n    return _.chain(objects)\r\n        .filter(val => val.remove == false)\r\n        .map(val => bfs(val))\r\n        .filter(q => q.length > 2 && (rowCountMatch(q[0], 3, Direction.Horizontal) || rowCountMatch(q[0], 3, Direction.Vertical)))\r\n        .map(val => _.chain(val).sortBy(q => q.x).sortBy(q => q.y).value())\r\n        .groupBy(q => q[0].x + \"|\" + q[0].y).map(q => q[0]).value().length > 0;\r\n}\r\n\r\nconst sortObjects = (a: Block, b: Block): number => {\r\n    return a.x == b.x && a.y == b.y && a.color == b.color ? 1 : 0;\r\n}\r\n\r\nconst rowCountMatch = (block: Block, blocksInRowCount: number, direction: Direction): boolean => {\r\n    return new Array(blocksInRowCount)\r\n        .fill('x')\r\n        .filter((_, ind) => {\r\n            let x = direction == Direction.Horizontal ? block.x + (ind * block.width) : block.x;\r\n            let y = direction == Direction.Vertical ? block.y + (ind * block.height) : block.y;\r\n            let obj = getObjectsIn(x, y)[0];\r\n            return (obj && obj.color == block.color);\r\n        }).length == blocksInRowCount;\r\n}\r\n\r\nenum Direction {\r\n    Vertical,\r\n    Horizontal\r\n}\r\n\r\nconst getObjectsIn = (x: number, y: number) => {\r\n    return gameObjects.filter((object) => (y >= object.y && y < object.y + object.height\r\n        && x >= object.x && x < object.x + object.width));\r\n}\r\n\r\n// let canClick = true;\r\nlet canvasLeftOffset = canvas.offsetLeft;\r\nlet canvasToptOffset = canvas.offsetTop;\r\ndocument.addEventListener('click', (event) => {\r\n    const x = event.pageX - canvasLeftOffset;\r\n    const y = event.pageY - canvasToptOffset;\r\n    // if(canClick == false)\r\n    //     return;\r\n    // canClick = false;\r\n    const clickedObject = getObjectsIn(x, y)[0];\r\n    // if(!clickedObject)\r\n    //     return;\r\n    const sameColors = bfs(clickedObject);\r\n    sameColors.forEach((val, ind) => val.remove = true);\r\n    // createNewLine();\r\n    // upOldLines();\r\n    isTripleAvailable(gameObjects)\r\n\r\n\r\n    // canClick = true;\r\n});\r\n\r\nnew Array(6).fill(0).forEach(() => {\r\n    createNewLine();\r\n    upOldLines();\r\n})\r\n\r\npulse(null);"]}