{"version":3,"sources":["index.ts","Core/Game.ts","Core/Canvas.ts","Objects/ObjectManager.ts","Objects/Block.ts","Objects/Color.ts"],"names":[],"mappings":"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","file":"","sourcesContent":["import Game from './Core/Game';\r\n\r\nlet game = new Game();\r\ngame.start();","import Block from '../Objects/Block';\r\nimport Canvas from './Canvas';\r\nimport ObjectManager from '../Objects/ObjectManager';\r\n\r\nclass Game {\r\n    public static dt: number;\r\n    private _myCanvas: Canvas  = Canvas.Instance;\r\n    private _manager: ObjectManager = ObjectManager.Instance;\r\n    private _lastTime: number = 0;\r\n\r\n    constructor() {\r\n        this._manager.createStartLines();\r\n        this.initEventListener();\r\n    }\r\n\r\n    private get CanvasLeftOffset(): number{return this._myCanvas.Canvas.offsetLeft;}\r\n    private get CanvasToptOffset(): number{return this._myCanvas.Canvas.offsetTop;}\r\n\r\n    private initEventListener() {\r\n        document.addEventListener('click', this.gameProcessController);\r\n    }\r\n\r\n    private gameProcessController = async (event: MouseEvent) => {\r\n        const x = event.pageX - this.CanvasLeftOffset;\r\n        const y = event.pageY - this.CanvasToptOffset;\r\n\r\n        const clickedObject = this._manager.getObjectIn(x, y);\r\n        \r\n        if (!clickedObject || this._manager.isMoving || this._manager.isAnimating)\r\n        {\r\n            return;\r\n        }\r\n            \r\n        const sameColors = this._manager.bfs(clickedObject);\r\n        sameColors.forEach((val, ind) => {val.shouldAnimate = true});\r\n        this._manager.createNewLine();\r\n        this._manager.upOldLines();\r\n        while (true) {\r\n            await this._manager.waitForFalling();\r\n            const triples = this._manager.isTripleAvailable();\r\n            if (triples.length == 0)\r\n                break;\r\n            triples.forEach(val => val.forEach(q => q.shouldAnimate = true));\r\n            this._myCanvas.StartShaking();\r\n        }\r\n        if (this._manager.GameObjects.length == 0)\r\n            this._manager.createNewLine();\r\n\r\n        if (this._manager.GameObjects.some(q => q.y < 0 + 2*q.height)) \r\n            this.changeGameController(this.gameOverController, this.gameProcessController);\r\n    }\r\n\r\n    private gameOverController = (): void => {\r\n        this._manager.GameObjects.forEach(q => q.remove = true);\r\n        this._manager.createStartLines();\r\n\r\n        this.changeGameController(this.gameProcessController, this.gameOverController);\r\n    }\r\n    \r\n    private changeGameController(on: EventListenerOrEventListenerObject, off: EventListenerOrEventListenerObject): void {\r\n        document.removeEventListener('click', off);\r\n        document.addEventListener('click', on);\r\n    }\r\n\r\n    private pulse = (millis): void => {\r\n        if (this._lastTime != null && this._lastTime) {\r\n            Game.dt = ((millis - this._lastTime) / 1000);\r\n            this.update();\r\n        }\r\n        this._lastTime = millis;\r\n        window.requestAnimationFrame(this.pulse);\r\n    }\r\n\r\n    private async update(): Promise<void> {\r\n        this._manager.GameObjects = this._manager.GameObjects.filter(q => q.remove == false);\r\n        this._manager.isAnimating = this._manager.GameObjects.filter(object => object.shouldAnimate).length > 0;\r\n        this._manager.isMoving = this._manager.GameObjects.filter(object => object.isDownPlaceEmpty()).length > 0;\r\n        this._manager.GameObjects.forEach(object => object.update());\r\n\r\n        this._myCanvas.clearWindow();\r\n        this._myCanvas.preShake();\r\n        this._myCanvas.drawBackground();\r\n        this._myCanvas.drawSideColumn();\r\n        this._myCanvas.drawGameOverLine();\r\n\r\n        this._manager.GameObjects.forEach((object) => {\r\n            this._myCanvas.drawBlock(object);\r\n        });\r\n\r\n        this._myCanvas.Context.setTransform(1, 0 ,0 , 1, 0, 0);\r\n        this._myCanvas.postShake();\r\n    }\r\n\r\n    public start(): void {\r\n        this.pulse(null);\r\n    }\r\n}\r\n\r\nexport default Game;","import Block from '../Objects/Block';\r\nimport Game from './Game';\r\n\r\nclass Canvas {\r\n    private shouldShake: boolean = false;\r\n    private shakeTime: number = 0;\r\n    private shakeDuration: number = 0.5;\r\n    private static _instance: Canvas;\r\n    private _canvas: HTMLCanvasElement;\r\n    private _context: CanvasRenderingContext2D;\r\n    private _width: number;\r\n    private _height: number;\r\n    private dx: number = 0;\r\n    private dy: number = 0;\r\n\r\n    static get Instance(): Canvas {\r\n        if (Canvas._instance == null)\r\n            Canvas._instance = new Canvas(420, 660);\r\n        return Canvas._instance;\r\n    }\r\n\r\n    private constructor(width: number, height: number) {\r\n        this.initCanvas(width, height);\r\n    }\r\n\r\n    private initCanvas(width: number, height: number) {\r\n        this._height = height;\r\n        this._width = width;\r\n        document.body.innerHTML = `<canvas id='canvas' width='${this._width}' height='${this._height}' />`;\r\n        this._canvas = (<HTMLCanvasElement>document.getElementById(\"canvas\"));\r\n        this._context = this._canvas.getContext(\"2d\");\r\n    }\r\n\r\n    public get Width(): number { return this._width }\r\n    public get Height(): number { return this._height }\r\n    public get Canvas(): HTMLCanvasElement { return this._canvas }\r\n    public get Context(): CanvasRenderingContext2D { return this._context }\r\n\r\n    public StartShaking(): void {\r\n        this.shouldShake = true;\r\n        this.shakeTime = 0;\r\n    }\r\n\r\n\r\n    public drawBackground(): void {\r\n        this._context.fillStyle = '#806895';\r\n        this._context.fillRect(0, 0, this._width, this._height);\r\n    }\r\n\r\n    public drawSideColumn(): void {\r\n        this._context.fillStyle = '#60427a';\r\n        this._context.fillRect((this._width / 7) * 1.5, 0, this._width - (this._width / 7) * 3, this._height);\r\n    }\r\n\r\n    public drawGameOverLine(): void {\r\n        this._context.setLineDash([38, 10]);\r\n        this._context.beginPath();\r\n        this._context.moveTo(((this._width / 7) * 1.5)-20, this._height/11);\r\n        this._context.lineTo(this._width - (this._width / 7)* 1.5, this._height/11);\r\n        this._context.lineWidth = 10;\r\n        this._context.strokeStyle = '#806895';\r\n        this._context.stroke();\r\n        this._context.closePath();\r\n    }\r\n\r\n    public drawBlock(object: Block): void {\r\n        this._context.fillStyle = object.color.normal;\r\n        this._context.setTransform(1, 0, 0, 1, object.x+object.width / 2, object.y+object.height / 2);\r\n        this._context.rotate(object.rotation);\r\n        this._context.fillRect((-object.width / 2)+this.dx, (-object.height / 2)+this.dy, object.width, object.height);  \r\n        if (object.ShouldHaveBorder && !object.shouldAnimate) {\r\n            this._context.fillStyle = object.color.shadow;\r\n            this._context.fillRect(\r\n                (-object.width / 2)+this.dx, \r\n                ((-object.height/2)+object.height/10*9)+this.dy, \r\n                object.width, \r\n                object.height / 10);\r\n        }\r\n    }\r\n\r\n    public preShake(): void {\r\n        if(this.shakeTime > this.shakeDuration || !this.shouldShake)\r\n            return;\r\n        this.shakeTime += Game.dt;\r\n        this._context.save();\r\n        this.dx = Math.random()*5;\r\n        this.dy = Math.random()*5;\r\n        this._context.translate(this.dx, this.dy);    \r\n    }\r\n\r\n\r\n    public postShake(): void {\r\n        if (this.shakeTime > this.shakeDuration || !this.shouldShake) {\r\n            this.shouldShake = false;\r\n            this.dx = 0;\r\n            this.dy = 0;\r\n            return;\r\n        }\r\n        this._context.restore();\r\n    }\r\n\r\n    public clearWindow(): void {\r\n        this._context.clearRect(0, 0, this._canvas.width, this._canvas.height);\r\n    }\r\n}\r\n\r\nexport default Canvas;","import * as _ from 'underscore';\r\nimport Block from './Block';\r\nimport Canvas from '../Core/Canvas';\r\nimport Game from '../Core/Game';\r\nimport { Color } from './Color';\r\n\r\nclass ObjectManager {\r\n    private _gameObjects: Block[] = [];\r\n    private static _instance: ObjectManager;\r\n    private _myCanvas: Canvas;\r\n    public isMoving : boolean = false;\r\n    public isAnimating : boolean = false;\r\n    private _startLinesCount : number = 2;\r\n    private _blocksPerRowCount : number = 4;\r\n    private _colors: Color[] = [\r\n        new Color('#ff9e9d', '#d57f88'),\r\n        new Color('#f4eea6', '#ccc08f'),\r\n        new Color('#3fb8af', '#359497'),\r\n        new Color('#ff3d7f', '#d5316e')\r\n    ];\r\n\r\n    static get Instance(): ObjectManager {\r\n        if (ObjectManager._instance == null)\r\n            ObjectManager._instance = new ObjectManager();\r\n        return ObjectManager._instance;\r\n    }\r\n\r\n    private constructor() {\r\n        this._myCanvas = Canvas.Instance;\r\n    }\r\n\r\n    public get GameObjects(): Block[] { return this._gameObjects }\r\n    public set GameObjects(gameObjects) { this._gameObjects = gameObjects }\r\n\r\n    private getRandomColor = (): Color => {\r\n        let random = Math.floor(Math.random() * this._colors.length);\r\n        return this._colors[random];\r\n    }\r\n\r\n    private sortObjects(a: Block, b: Block): number {\r\n        return a.x == b.x && a.y == b.y && a.color.normal == b.color.normal ? 1 : 0;\r\n    }\r\n\r\n    private rowCountMatch(block: Block, blocksInRowCount: number, direction: Direction): boolean {\r\n        return new Array(blocksInRowCount)\r\n            .fill('x')\r\n            .filter((_, ind) => {\r\n                let x = direction == Direction.Horizontal ? block.x + (ind * block.width) : block.x;\r\n                let y = direction == Direction.Vertical ? block.y + (ind * block.height) : block.y;\r\n                let obj = this.getObjectIn(x, y);\r\n                return (obj && obj.color.normal == block.color.normal);\r\n            }).length == blocksInRowCount;\r\n    }\r\n\r\n    private timeout = async (wait: number): Promise<void> => new Promise<void>((res) => setTimeout(res, wait));\r\n\r\n    public createStartLines(): void {\r\n        new Array(this._startLinesCount).fill(0).forEach(() => {\r\n            this.createNewLine();\r\n            this.upOldLines();\r\n        })\r\n    }\r\n\r\n    public createNewLine(): void {\r\n        const size = Canvas.Instance.Width / 7;\r\n        while (true) {\r\n            let lineObjects = new Array(this._blocksPerRowCount)\r\n                .fill(0)\r\n                .map((val, ind) => new Block(size * (ind + 1.5), this._myCanvas.Height, this.getRandomColor()))\r\n            let result = _.chain(lineObjects)\r\n                .groupBy(block => block.color.normal)\r\n                .map(block => block.length)\r\n                .filter(block => block > 2)\r\n                .value().length == 0;\r\n\r\n            if (result == false)\r\n                continue;\r\n\r\n            this._gameObjects = this._gameObjects.concat(lineObjects);\r\n            \r\n            break;\r\n        }\r\n    }\r\n\r\n    public upOldLines(): void {\r\n        this._gameObjects.forEach((block) => block.y -= Canvas.Instance.Width / 7);\r\n    }\r\n\r\n    public bfs(startBlock: Block): Block[] {\r\n        let checked: Block[] = [];\r\n        let queue: Block[] = [];\r\n        queue.push(startBlock);\r\n        checked.push(startBlock);\r\n        while (queue.length) {\r\n            let current = queue.shift();\r\n            current\r\n                .getNeightbours()\r\n                .filter(neigh => neigh.color.normal == current.color.normal)\r\n                .forEach(neigh => {\r\n                    if (checked.indexOf(neigh) == -1) {\r\n                        queue.push(neigh);\r\n                        checked.push(neigh);\r\n                    }\r\n                });\r\n        }\r\n        return checked;\r\n    };\r\n\r\n    public isTripleAvailable(): Block[][] {\r\n        return _.chain(this._gameObjects)\r\n            .filter(val => val.remove == false)\r\n            .map(val => this.bfs(val))\r\n            .filter(q => q.length > 2 &&\r\n                (this.rowCountMatch(q[0], 3, Direction.Horizontal) || this.rowCountMatch(q[0], 3, Direction.Vertical)))\r\n            .map(val => _.chain(val).sortBy(q => q.x).sortBy(q => q.y).value())\r\n            .groupBy(q => q[0].x + \"|\" + q[0].y)\r\n            .map(q => q[0])\r\n            .value();\r\n    }\r\n\r\n    public getObjectsIn(x: number, y: number): Block[] {\r\n        return this._gameObjects.filter((object) => (y >= object.y && y < object.y + object.height\r\n            && x >= object.x && x < object.x + object.width));\r\n    }\r\n    public getObjectIn(x: number, y: number): Block {return this.getObjectsIn(x,y)[0];}\r\n\r\n    public waitForFalling = async (): Promise<boolean> => {\r\n        while (true) {\r\n            await this.timeout(100);\r\n            if (this.isMoving == false)\r\n                return true;\r\n        }\r\n    }\r\n\r\n    public waitForAnimation = async (): Promise<boolean> => {\r\n        while (true) {\r\n            await this.timeout(1000);\r\n            if (this.isAnimating == false)\r\n                return true;\r\n        }\r\n    }\r\n}\r\n\r\nenum Direction {\r\n    Vertical,\r\n    Horizontal\r\n}\r\n\r\nexport default ObjectManager;","import Canvas from '../Core/Canvas';\r\nimport ObjectManager from './ObjectManager';\r\nimport { Color } from './Color';\r\nimport Game from '../Core/Game';\r\n\r\nclass Block {\r\n    public height: number = Canvas.Instance.Width / 7;\r\n    public width: number = Canvas.Instance.Width / 7;\r\n    public rotation: number = 0;\r\n    public currentAnimationTime: number = 0;\r\n    public remove: boolean = false;\r\n    public shouldAnimate: boolean = false;\r\n    private _manager: ObjectManager = ObjectManager.Instance;\r\n    private _canvas: Canvas = Canvas.Instance;\r\n\r\n    constructor(public x: number,public  y: number,public color: Color) {}\r\n\r\n    public get ShouldHaveBorder(): boolean {\r\n        const downNeighbour = this._manager.getObjectIn(this.x, this.y + this.height);\r\n        return (downNeighbour && this.color != downNeighbour.color ||\r\n            this.y == this._canvas.Height - this.height);\r\n    }\r\n\r\n    public getNeightbours(): Block[] {\r\n        const x = this.x;\r\n        const y = this.y;\r\n        const size = this.height;\r\n        return [\r\n                this._manager.getObjectIn(x, y - size),\r\n                this._manager.getObjectIn(x, y + size),\r\n                this._manager.getObjectIn(x - size, y),\r\n                this._manager.getObjectIn(x + size, y)\r\n            ].filter(q => q);\r\n    }\r\n\r\n    public isDownPlaceEmpty(): boolean {\r\n        return (this._manager.getObjectIn(this.x, this.y + this.height) == undefined &&\r\n            this.y < this._canvas.Height - this.height)\r\n    }\r\n\r\n    private easeOutQuint = (currentTime: number, startValue: number, changeInValue: number, duration: number) => {\r\n        return changeInValue*((currentTime=currentTime/duration-1)*currentTime*currentTime*currentTime*currentTime + 1) + startValue;\r\n    }\r\n\r\n    public update(): void {\r\n        if (this.isDownPlaceEmpty() && !this._manager.isAnimating)\r\n        {\r\n            this.y += Math.floor(this.height * Game.dt ) * 15;\r\n        }\r\n        if (this.shouldAnimate)\r\n        {\r\n            this.height = this.easeOutQuint(this.currentAnimationTime, this.height, -this.height, 8);\r\n            this.width = this.easeOutQuint(this.currentAnimationTime, this.width, -this.width, 8);\r\n            this.x = this.easeOutQuint(this.currentAnimationTime, this.x, this.width/2, 8);\r\n            this.y = this.easeOutQuint(this.currentAnimationTime, this.y, this.height/2, 8);\r\n            this.currentAnimationTime+=1.5*Game.dt;\r\n            this.rotation+=0.1;\r\n            if(this.currentAnimationTime >= 0.5) { this.shouldAnimate = false; this.remove = true}\r\n        }\r\n    }\r\n}\r\n\r\nexport default Block;","export class Color {\r\n    constructor(public normal: string, public shadow: string) {}\r\n}"]}