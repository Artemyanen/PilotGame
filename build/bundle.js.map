{"version":3,"sources":["index.ts","Core/Game.ts","Core/Canvas.ts","Objects/ObjectManager.ts","Objects/Block.ts","Objects/Color.ts"],"names":[],"mappings":"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","file":"","sourcesContent":["import Game from './Core/Game';\r\n\r\nlet game = new Game();\r\ngame.start();","import Block from '../Objects/Block';\r\nimport Canvas from './Canvas';\r\nimport ObjectManager from '../Objects/ObjectManager';\r\n\r\nclass Game {\r\n    public static dt: number;\r\n    private _myCanvas: Canvas;\r\n    private _manager: ObjectManager;\r\n    private _lastTime: number = 0;\r\n    private _canvasLeftOffset: number;\r\n    private _canvasToptOffset: number;\r\n\r\n    constructor() {\r\n        this._myCanvas = Canvas.Instance;\r\n        this._manager = ObjectManager.Instance;\r\n        this._canvasLeftOffset = this._myCanvas.Canvas.offsetLeft;\r\n        this._canvasToptOffset = this._myCanvas.Canvas.offsetTop;\r\n\r\n        this._manager.createStartLines();\r\n        this.initEventListener();\r\n    }\r\n\r\n    private initEventListener() {\r\n        document.addEventListener('click', this.gameProcessControler);\r\n    }\r\n\r\n    private gameProcessControler = async (event: MouseEvent) => {\r\n        const x = event.pageX - this._canvasLeftOffset;\r\n        const y = event.pageY - this._canvasToptOffset;\r\n\r\n        const clickedObject = this._manager.getObjectsIn(x, y)[0];\r\n        if (!clickedObject || this._manager._isMoving)\r\n            return;\r\n        const sameColors = this._manager.bfs(clickedObject);\r\n        sameColors.forEach((val, ind) => val.remove = true);\r\n        this._manager.createNewLine();\r\n        this._manager.upOldLines();\r\n        while (true) {\r\n            await this._manager.waitForFalling();\r\n            const triples = this._manager.isTripleAvailable();\r\n            if (triples.length == 0)\r\n                break;\r\n            triples.forEach(val => val.forEach(q => q.remove = true));\r\n        }\r\n        if (this._manager.GameObjects.length == 0)\r\n            this._manager.createNewLine();\r\n\r\n        if (this._manager.GameObjects.some(q => q.y < 0 + q.height)) {\r\n            //End of existing game\r\n            document.removeEventListener('click', this.gameProcessControler);\r\n            document.addEventListener('click', this.gameOverControler);\r\n        }\r\n    }\r\n\r\n    private gameOverControler(): void {\r\n        //Start new Game\r\n        document.removeEventListener('click', this.gameOverControler);\r\n        document.addEventListener('click', this.gameProcessControler);\r\n    }\r\n\r\n    private pulse = (millis): void => {\r\n        if (this._lastTime != null && this._lastTime) {\r\n            Game.dt = ((millis - this._lastTime) / 1000);\r\n            this.update();\r\n        }\r\n        this._lastTime = millis;\r\n        window.requestAnimationFrame(this.pulse);\r\n    }\r\n\r\n    private update(): void {\r\n        this._manager.GameObjects = this._manager.GameObjects.filter(q => q.remove == false);\r\n        this._manager._isMoving = this._manager.GameObjects.filter(object => object.isDownPlaceEmpty()).length > 0;\r\n        this._manager.GameObjects.forEach(object => object.update());\r\n\r\n        this._myCanvas.clearWindow();\r\n        this._myCanvas.drawBackground();\r\n        this._myCanvas.drawSideColumn();\r\n\r\n        this._manager.GameObjects.forEach((object) => {\r\n            this._myCanvas.drawBlock(object);\r\n        });\r\n    }\r\n\r\n    public start(): void {\r\n        this.pulse(null);\r\n    }\r\n}\r\n\r\nexport default Game;","import Block from '../Objects/Block';\r\n\r\nclass Canvas {\r\n    private static _instance: Canvas;\r\n    private _canvas: HTMLCanvasElement;\r\n    private _context: CanvasRenderingContext2D;\r\n    private _width: number;\r\n    private _height: number;\r\n\r\n    static get Instance(): Canvas {\r\n        if (Canvas._instance == null)\r\n            Canvas._instance = new Canvas(420, 640);\r\n        return Canvas._instance;\r\n    }\r\n\r\n    private constructor(width: number, height: number) {\r\n        this.initCanvas(width, height);\r\n    }\r\n\r\n    private initCanvas(width: number, height: number) {\r\n        this._height = height;\r\n        this._width = width;\r\n        document.body.innerHTML = `<canvas id='canvas' width='${this._width}' height='${this._height}' />`;\r\n        this._canvas = (<HTMLCanvasElement>document.getElementById(\"canvas\"));\r\n        this._context = this._canvas.getContext(\"2d\");\r\n    }\r\n\r\n    public get Width(): number { return this._width }\r\n    public get Height(): number { return this._height }\r\n    public get Canvas(): HTMLCanvasElement { return this._canvas }\r\n    public get Context(): CanvasRenderingContext2D { return this._context }\r\n\r\n\r\n    public drawBackground(): void {\r\n        this._context.fillStyle = '#806895';\r\n        this._context.fillRect(0, 0, this._width, this._height);\r\n    }\r\n\r\n    public drawSideColumn(): void {\r\n        this._context.fillStyle = '#60427a';\r\n        this._context.fillRect((this._width / 7) * 1.5, 0, this._width - (this._width / 7) * 3, this._height);\r\n    }\r\n\r\n    public drawBlock(object: Block): void {\r\n        this._context.fillStyle = object.color.normal;\r\n        this._context.fillRect(object.x, object.y, object.width, object.height);\r\n        if (object.ShouldHaveBorder) {\r\n            this._context.fillStyle = object.color.shadow;\r\n            this._context.fillRect(object.x, object.y + object.height / 10 * 9, object.width, object.height / 10);\r\n        }\r\n    }\r\n\r\n    public clearWindow(): void {\r\n        this._context.clearRect(0, 0, this._canvas.width, this._canvas.height);\r\n    }\r\n}\r\n\r\nexport default Canvas;","import * as _ from 'underscore';\r\nimport Block from './Block';\r\nimport Canvas from '../Core/Canvas';\r\nimport Game from '../Core/Game';\r\nimport { Color } from './Color';\r\n\r\nclass ObjectManager {\r\n    private _gameObjects: Block[] = [];\r\n    private static _instance: ObjectManager;\r\n    private _myCanvas: Canvas;\r\n    public _isMoving = false;\r\n    private _colors: Color[] = [\r\n        new Color('#ff9e9d', '#d57f88'),\r\n        new Color('#f4eea6', '#ccc08f'),\r\n        new Color('#3fb8af', '#359497'),\r\n        new Color('#ff3d7f', '#d5316e')\r\n    ];\r\n\r\n    static get Instance(): ObjectManager {\r\n        if (ObjectManager._instance == null)\r\n            ObjectManager._instance = new ObjectManager();\r\n        return ObjectManager._instance;\r\n    }\r\n\r\n    private constructor() {\r\n        this._myCanvas = Canvas.Instance;\r\n    }\r\n\r\n    public get GameObjects(): Block[] { return this._gameObjects }\r\n    public set GameObjects(gameObjects) { this._gameObjects = gameObjects }\r\n\r\n    private getRandomColor = (): Color => {\r\n        let random = Math.floor(Math.random() * this._colors.length);\r\n        return this._colors[random];\r\n    }\r\n\r\n    private sortObjects(a: Block, b: Block): number {\r\n        return a.x == b.x && a.y == b.y && a.color.normal == b.color.normal ? 1 : 0;\r\n    }\r\n\r\n    private rowCountMatch(block: Block, blocksInRowCount: number, direction: Direction): boolean {\r\n        return new Array(blocksInRowCount)\r\n            .fill('x')\r\n            .filter((_, ind) => {\r\n                let x = direction == Direction.Horizontal ? block.x + (ind * block.width) : block.x;\r\n                let y = direction == Direction.Vertical ? block.y + (ind * block.height) : block.y;\r\n                let obj = this.getObjectsIn(x, y)[0];\r\n                return (obj && obj.color.normal == block.color.normal);\r\n            }).length == blocksInRowCount;\r\n    }\r\n\r\n    private timeout = async (wait: number): Promise<void> => new Promise<void>((res) => setTimeout(res, wait));\r\n\r\n    public createStartLines(): void {\r\n        new Array(2).fill(0).forEach(() => {\r\n            this.createNewLine();\r\n            this.upOldLines();\r\n        })\r\n    }\r\n\r\n    public createNewLine(): void {\r\n        const size = Canvas.Instance.Width / 7;\r\n        let y = this._myCanvas.Height;\r\n        while (true) {\r\n            let lineObjects = new Array(4)\r\n                .fill(0)\r\n                .map((val, ind) => new Block(size * (ind + 1.5), y, this.getRandomColor()))\r\n            let result = _.chain(lineObjects)\r\n                .groupBy(q => q.color.normal)\r\n                .map(q => q.length)\r\n                .filter(q => q > 2)\r\n                .value().length == 0;\r\n\r\n            if (result == false)\r\n                continue;\r\n\r\n            this._gameObjects = this._gameObjects.concat(lineObjects);\r\n            break;\r\n        }\r\n    }\r\n\r\n    public upOldLines(): void {\r\n        this._gameObjects.forEach((block) => {\r\n            block.y -= Canvas.Instance.Width / 7;\r\n        });\r\n    }\r\n\r\n    public bfs(startBlock: Block): Block[] {\r\n        let checked: Block[] = [];\r\n        let queue: Block[] = [];\r\n        let current: Block;\r\n        queue.push(startBlock);\r\n        checked.push(startBlock);\r\n        while (queue.length) {\r\n            current = queue.shift();\r\n            current\r\n                .getNeightbours()\r\n                .filter(neigh => neigh.color.normal == current.color.normal)\r\n                .forEach(neigh => {\r\n                    if (checked.indexOf(neigh) == -1) {\r\n                        queue.push(neigh);\r\n                        checked.push(neigh);\r\n                    }\r\n                });\r\n        }\r\n        return checked;\r\n    };\r\n\r\n    public isTripleAvailable(): Block[][] {\r\n        return _.chain(this._gameObjects)\r\n            .filter(val => val.remove == false)\r\n            .map(val => this.bfs(val))\r\n            .filter(q => q.length > 2 &&\r\n                (this.rowCountMatch(q[0], 3, Direction.Horizontal) || this.rowCountMatch(q[0], 3, Direction.Vertical)))\r\n            .map(val => _.chain(val).sortBy(q => q.x).sortBy(q => q.y).value())\r\n            .groupBy(q => q[0].x + \"|\" + q[0].y).map(q => q[0])\r\n            .value();\r\n    }\r\n\r\n    public getObjectsIn(x: number, y: number): Block[] {\r\n        return this._gameObjects.filter((object) => (y >= object.y && y < object.y + object.height\r\n            && x >= object.x && x < object.x + object.width));\r\n    }\r\n\r\n    public waitForFalling = async (): Promise<boolean> => {\r\n        while (true) {\r\n            await this.timeout(100);\r\n            if (this._isMoving == false)\r\n                return true;\r\n        }\r\n    }\r\n}\r\n\r\nenum Direction {\r\n    Vertical,\r\n    Horizontal\r\n}\r\n\r\nexport default ObjectManager;","import Canvas from '../Core/Canvas';\r\nimport ObjectManager from './ObjectManager';\r\nimport { Color } from './Color';\r\n\r\nclass Block implements IObject {\r\n    public x: number;\r\n    public y: number;\r\n    public color: Color;\r\n    public height: number = Canvas.Instance.Width / 7;\r\n    public width: number = Canvas.Instance.Width / 7;\r\n    public remove: boolean;\r\n    private _manager: ObjectManager = ObjectManager.Instance;\r\n    private _canvas: Canvas = Canvas.Instance;\r\n\r\n    constructor(x: number, y: number, color: Color) {\r\n        this.color = color;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.remove = false;\r\n    }\r\n    public get ShouldHaveBorder(): boolean {\r\n        const downNeighbour = this._manager.getObjectsIn(this.x, this.y + this.height)[0];\r\n        return (downNeighbour && this.color != downNeighbour.color ||\r\n            this.y == this._canvas.Height - this.height);\r\n    }\r\n\r\n    public getNeightbours(): Block[] {\r\n        const x = this.x;\r\n        const y = this.y;\r\n        const size = this.height;\r\n        return [\r\n            this._manager.getObjectsIn(x, y - size)[0],\r\n            this._manager.getObjectsIn(x, y + size)[0],\r\n            this._manager.getObjectsIn(x - size, y)[0],\r\n            this._manager.getObjectsIn(x + size, y)[0]].filter(q => q);\r\n    }\r\n\r\n    public isDownPlaceEmpty(): boolean {\r\n        return (this._manager.getObjectsIn(this.x, this.y + this.height)[0] == undefined &&\r\n            this.y < this._canvas.Height - this.height)\r\n    }\r\n\r\n    public update(): void {\r\n        if (this.isDownPlaceEmpty())\r\n            this.y += this.height / 8;\r\n    }\r\n}\r\n\r\ninterface IObject {\r\n    x: number,\r\n    y: number,\r\n    color: Color\r\n}\r\n\r\nexport default Block;","export class Color {\r\n    constructor(public normal: string, public shadow: string) {}\r\n}"]}